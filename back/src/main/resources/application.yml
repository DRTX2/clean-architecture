spring:
  application:
    name: clean-architecture-example

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  cache:
    type: ${SPRING_CACHE_TYPE}
    redis:
      host: ${SPRING_REDIS_HOST} # redis, no localhost, use the service name from docker-compose
      port: ${SPRING_REDIS_PORT}
      time-to-live: 600000 # 10 minutes
  security:
    user:
      name: ${SPRING_SECURITY_USER_NAME}
      password: ${SPRING_SECURITY_USER_PASSWORD}
                # bcrypt hash for 'admin123'
      roles: ${SPRING_SECURITY_USER_ROLES}
server:
  port: ${SERVER_PORT}

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,env,threaddump
  endpoint:
    health:
      show-details: always
  metrics:
    enable:
      all: true
springdoc:
  enable-validation: false